<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/PXStyleable.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/PXStyleable</TokenIdentifier>
			<Abstract type="html">The PXStyleable protocol defines a set of properties and methods needed in order to style a given object.</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>
			
			<NodeRef refid="12"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setStyleId:</TokenIdentifier>
			<Abstract type="html">The ID for this styleable object. Ideally, this value should be unique within the context being styled.</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleId</Declaration>
			
			
			<Anchor>//api/name/styleId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/styleId</TokenIdentifier>
			<Abstract type="html">The ID for this styleable object. Ideally, this value should be unique within the context being styled.</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleId</Declaration>
			
			
			<Anchor>//api/name/styleId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/styleId</TokenIdentifier>
			<Abstract type="html">The ID for this styleable object. Ideally, this value should be unique within the context being styled.</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleId</Declaration>
			
			
			<Anchor>//api/name/styleId</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setStyleClass:</TokenIdentifier>
			<Abstract type="html">The CSS classes associated with this styleable object. One or more classes may be specified by delimiting each with
whitespace</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleClass</Declaration>
			
			
			<Anchor>//api/name/styleClass</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/styleClass</TokenIdentifier>
			<Abstract type="html">The CSS classes associated with this styleable object. One or more classes may be specified by delimiting each with
whitespace</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleClass</Declaration>
			
			
			<Anchor>//api/name/styleClass</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/styleClass</TokenIdentifier>
			<Abstract type="html">The CSS classes associated with this styleable object. One or more classes may be specified by delimiting each with
whitespace</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleClass</Declaration>
			
			
			<Anchor>//api/name/styleClass</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setStyleMode:</TokenIdentifier>
			<Abstract type="html">The styling mode of the styleable as defined by the PXStylingMode enumeration.</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) PXStylingMode styleMode</Declaration>
			
			
			<Anchor>//api/name/styleMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/styleMode</TokenIdentifier>
			<Abstract type="html">The styling mode of the styleable as defined by the PXStylingMode enumeration.</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) PXStylingMode styleMode</Declaration>
			
			
			<Anchor>//api/name/styleMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/styleMode</TokenIdentifier>
			<Abstract type="html">The styling mode of the styleable as defined by the PXStylingMode enumeration.</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) PXStylingMode styleMode</Declaration>
			
			
			<Anchor>//api/name/styleMode</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setPxStyleElementName:</TokenIdentifier>
			<Abstract type="html">The element name to use when matching this styleable object against a selector</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *pxStyleElementName</Declaration>
			
			
			<Anchor>//api/name/pxStyleElementName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/pxStyleElementName</TokenIdentifier>
			<Abstract type="html">The element name to use when matching this styleable object against a selector</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *pxStyleElementName</Declaration>
			
			
			<Anchor>//api/name/pxStyleElementName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/pxStyleElementName</TokenIdentifier>
			<Abstract type="html">The element name to use when matching this styleable object against a selector</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *pxStyleElementName</Declaration>
			
			
			<Anchor>//api/name/pxStyleElementName</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setPxStyleParent:</TokenIdentifier>
			<Abstract type="html">The style parent that contains this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) id pxStyleParent</Declaration>
			
			
			<Anchor>//api/name/pxStyleParent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/pxStyleParent</TokenIdentifier>
			<Abstract type="html">The style parent that contains this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) id pxStyleParent</Declaration>
			
			
			<Anchor>//api/name/pxStyleParent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/pxStyleParent</TokenIdentifier>
			<Abstract type="html">The style parent that contains this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, weak) id pxStyleParent</Declaration>
			
			
			<Anchor>//api/name/pxStyleParent</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setPxStyleChildren:</TokenIdentifier>
			<Abstract type="html">The style children owned by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *pxStyleChildren</Declaration>
			
			
			<Anchor>//api/name/pxStyleChildren</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/pxStyleChildren</TokenIdentifier>
			<Abstract type="html">The style children owned by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *pxStyleChildren</Declaration>
			
			
			<Anchor>//api/name/pxStyleChildren</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/pxStyleChildren</TokenIdentifier>
			<Abstract type="html">The style children owned by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *pxStyleChildren</Declaration>
			
			
			<Anchor>//api/name/pxStyleChildren</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setBounds:</TokenIdentifier>
			<Abstract type="html">The bounds of the item being styled</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGRect bounds</Declaration>
			
			
			<Anchor>//api/name/bounds</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/bounds</TokenIdentifier>
			<Abstract type="html">The bounds of the item being styled</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGRect bounds</Declaration>
			
			
			<Anchor>//api/name/bounds</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/bounds</TokenIdentifier>
			<Abstract type="html">The bounds of the item being styled</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGRect bounds</Declaration>
			
			
			<Anchor>//api/name/bounds</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setFrame:</TokenIdentifier>
			<Abstract type="html">The frame of the item being styled</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGRect frame</Declaration>
			
			
			<Anchor>//api/name/frame</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/frame</TokenIdentifier>
			<Abstract type="html">The frame of the item being styled</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGRect frame</Declaration>
			
			
			<Anchor>//api/name/frame</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/frame</TokenIdentifier>
			<Abstract type="html">The frame of the item being styled</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic) CGRect frame</Declaration>
			
			
			<Anchor>//api/name/frame</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/styleKey</TokenIdentifier>
			<Abstract type="html">Return a key used to classify this styleable</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (NSString *)styleKey</Declaration>
			
			
			<Anchor>//api/name/styleKey</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/updateStyles</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable and all of its descendant styleables</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (void)updateStyles</Declaration>
			
			
			<Anchor>//api/name/updateStyles</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/updateStylesNonRecursively</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable only</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (void)updateStylesNonRecursively</Declaration>
			
			
			<Anchor>//api/name/updateStylesNonRecursively</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/updateStylesAsync</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable and all of its descendant styleables asynchronously</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (void)updateStylesAsync</Declaration>
			
			
			<Anchor>//api/name/updateStylesAsync</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/updateStylesNonRecursivelyAsync</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable only asynchronously</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (void)updateStylesNonRecursivelyAsync</Declaration>
			
			
			<Anchor>//api/name/updateStylesNonRecursivelyAsync</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setStyleCSS:</TokenIdentifier>
			<Abstract type="html">Inline styles to apply to this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleCSS</Declaration>
			
			
			<Anchor>//api/name/styleCSS</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/styleCSS</TokenIdentifier>
			<Abstract type="html">Inline styles to apply to this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleCSS</Declaration>
			
			
			<Anchor>//api/name/styleCSS</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/styleCSS</TokenIdentifier>
			<Abstract type="html">Inline styles to apply to this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (nonatomic, copy) NSString *styleCSS</Declaration>
			
			
			<Anchor>//api/name/styleCSS</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setPxStyleNamespace:</TokenIdentifier>
			<Abstract type="html">Return the namespace URI associated with this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *pxStyleNamespace</Declaration>
			
			
			<Anchor>//api/name/pxStyleNamespace</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/pxStyleNamespace</TokenIdentifier>
			<Abstract type="html">Return the namespace URI associated with this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *pxStyleNamespace</Declaration>
			
			
			<Anchor>//api/name/pxStyleNamespace</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/pxStyleNamespace</TokenIdentifier>
			<Abstract type="html">Return the namespace URI associated with this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *pxStyleNamespace</Declaration>
			
			
			<Anchor>//api/name/pxStyleNamespace</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setSupportedPseudoClasses:</TokenIdentifier>
			<Abstract type="html">Return a list of pseudo-classes that are recognized by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *supportedPseudoClasses</Declaration>
			
			
			<Anchor>//api/name/supportedPseudoClasses</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/supportedPseudoClasses</TokenIdentifier>
			<Abstract type="html">Return a list of pseudo-classes that are recognized by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *supportedPseudoClasses</Declaration>
			
			
			<Anchor>//api/name/supportedPseudoClasses</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/supportedPseudoClasses</TokenIdentifier>
			<Abstract type="html">Return a list of pseudo-classes that are recognized by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *supportedPseudoClasses</Declaration>
			
			
			<Anchor>//api/name/supportedPseudoClasses</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setDefaultPseudoClass:</TokenIdentifier>
			<Abstract type="html">Return the default pseudo-class associated with this object when none is specified in a selector</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *defaultPseudoClass</Declaration>
			
			
			<Anchor>//api/name/defaultPseudoClass</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/defaultPseudoClass</TokenIdentifier>
			<Abstract type="html">Return the default pseudo-class associated with this object when none is specified in a selector</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *defaultPseudoClass</Declaration>
			
			
			<Anchor>//api/name/defaultPseudoClass</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/defaultPseudoClass</TokenIdentifier>
			<Abstract type="html">Return the default pseudo-class associated with this object when none is specified in a selector</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSString *defaultPseudoClass</Declaration>
			
			
			<Anchor>//api/name/defaultPseudoClass</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/canStylePseudoClass:</TokenIdentifier>
			<Abstract type="html">Return a boolean indicating if the styleable is able to style the specified pseudoClass. This is particularly
helpful with styleables that define pseudo-states (for example, UITextField) where the styleable can only have a
a given pseudoClass (state) applied to it if it is on that state already. Instances that do not implement this
method will assume this method was called and it returned YES</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (BOOL)canStylePseudoClass:(NSString *)pseudoClass</Declaration>
			
			
			<Anchor>//api/name/canStylePseudoClass:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/preventStyling</TokenIdentifier>
			<Abstract type="html">Return a boolean indicating if this styleable should be excluded from styling. Instances that do not implement this
method will assume this method was called and it returned NO</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (BOOL)preventStyling</Declaration>
			
			
			<Anchor>//api/name/preventStyling</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/setSupportedPseudoElements:</TokenIdentifier>
			<Abstract type="html">Return a list of pseudo-elements that are recognized by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *supportedPseudoElements</Declaration>
			
			
			<Anchor>//api/name/supportedPseudoElements</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/supportedPseudoElements</TokenIdentifier>
			<Abstract type="html">Return a list of pseudo-elements that are recognized by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *supportedPseudoElements</Declaration>
			
			
			<Anchor>//api/name/supportedPseudoElements</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfp/PXStyleable/supportedPseudoElements</TokenIdentifier>
			<Abstract type="html">Return a list of pseudo-elements that are recognized by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>@property (readonly, nonatomic, copy) NSArray *supportedPseudoElements</Declaration>
			
			
			<Anchor>//api/name/supportedPseudoElements</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/registerNotifications</TokenIdentifier>
			<Abstract type="html">Register any NSNotificationCenter notifications needed by this object</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (void)registerNotifications</Declaration>
			
			
			<Anchor>//api/name/registerNotifications</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/attributeValueForName:withNamespace:</TokenIdentifier>
			<Abstract type="html">Return a string value for the specified attribute name. If the name does not exist, a nil value should be returned</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (NSString *)attributeValueForName:(NSString *)name withNamespace:(NSString *)aNamespace</Declaration>
			<Parameters>
				<Parameter>
					<Name>name</Name>
					<Abstract type="html">The name of the attribute</Abstract>
				</Parameter><Parameter>
					<Name>aNamespace</Name>
					<Abstract type="html">The namespace of the attribute. This may be nil</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/attributeValueForName:withNamespace:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/styleableForPseudoElement:</TokenIdentifier>
			<Abstract type="html">Return the styleable associated with the given pseudo-element</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (id&lt;PXStyleable&gt;)styleableForPseudoElement:(NSString *)pseudoElement</Declaration>
			<Parameters>
				<Parameter>
					<Name>pseudoElement</Name>
					<Abstract type="html">The pseudo-element name</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/styleableForPseudoElement:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/PXStyleable/animationPropertyHandlers</TokenIdentifier>
			<Abstract type="html">Return a dictionary for animatable properties</Abstract>
			<DeclaredIn>PXStyleable.h</DeclaredIn>			
			
			<Declaration>- (NSDictionary *)animationPropertyHandlers</Declaration>
			
			
			<Anchor>//api/name/animationPropertyHandlers</Anchor>
		</Token>
		
	</File>
</Tokens>