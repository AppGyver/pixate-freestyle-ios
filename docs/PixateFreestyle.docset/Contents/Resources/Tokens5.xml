<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Classes/PixateFreestyle.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/cl/PixateFreestyle</TokenIdentifier>
			<Abstract type="html">This is the main entry point into the Pixate Engine</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>
			
			<NodeRef refid="5"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/version</TokenIdentifier>
			<Abstract type="html">The version number of the Pixate Engine</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)version</Declaration>
			
			
			<Anchor>//api/name/version</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/buildDate</TokenIdentifier>
			<Abstract type="html">The build date of this version of the Pixate Engine</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (NSDate *)buildDate</Declaration>
			
			
			<Anchor>//api/name/buildDate</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/apiVersion</TokenIdentifier>
			<Abstract type="html">The api integer version of the API</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (int)apiVersion</Declaration>
			
			
			<Anchor>//api/name/apiVersion</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/configuration</TokenIdentifier>
			<Abstract type="html">A property used to configure options in the Pixate</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (PixateFreestyleConfiguration *)configuration</Declaration>
			
			
			<Anchor>//api/name/configuration</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/refreshStylesWithOrientationChange</TokenIdentifier>
			<Abstract type="html">This property, when set to YES, automatically refreshes
styling when the orientation of your device changes. This is
set to NO by default.</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (BOOL)refreshStylesWithOrientationChange</Declaration>
			
			
			<Anchor>//api/name/refreshStylesWithOrientationChange</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/initializePixateFreestyle</TokenIdentifier>
			<Abstract type="html">This is required before styling can occur.</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)initializePixateFreestyle</Declaration>
			
			
			<Anchor>//api/name/initializePixateFreestyle</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/selectFromStyleable:usingSelector:</TokenIdentifier>
			<Abstract type="html">Return a collection of all styleables that match the specified selector. Note that the selector runs against views
that are in the current view tree only.</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (NSArray *)selectFromStyleable:(id&lt;PXStyleable&gt;)styleable usingSelector:(NSString *)source</Declaration>
			<Parameters>
				<Parameter>
					<Name>styleable</Name>
					<Abstract type="html">The root of the tree to search</Abstract>
				</Parameter><Parameter>
					<Name>source</Name>
					<Abstract type="html">The selector to use for matching</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/selectFromStyleable:usingSelector:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/matchingRuleSetsForStyleable:</TokenIdentifier>
			<Abstract type="html">Return a string representation of all active rule sets matching the specified styleable</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)matchingRuleSetsForStyleable:(id&lt;PXStyleable&gt;)styleable</Declaration>
			<Parameters>
				<Parameter>
					<Name>styleable</Name>
					<Abstract type="html">The styleable to match</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/matchingRuleSetsForStyleable:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/matchingDeclarationsForStyleable:</TokenIdentifier>
			<Abstract type="html">Return a string representation of all active declarations that apply to the specified styleable. Note that the list
shows the result of merging all matching rule sets, taking specificity and duplications into account.</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (NSString *)matchingDeclarationsForStyleable:(id&lt;PXStyleable&gt;)styleable</Declaration>
			<Parameters>
				<Parameter>
					<Name>styleable</Name>
					<Abstract type="html">The styleable to match</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/matchingDeclarationsForStyleable:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/styleSheetFromSource:withOrigin:</TokenIdentifier>
			<Abstract type="html">Allocate and initialize a new stylesheet using the specified source and stylesheet origin</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (id)styleSheetFromSource:(NSString *)source withOrigin:(PXStylesheetOrigin)origin</Declaration>
			<Parameters>
				<Parameter>
					<Name>source</Name>
					<Abstract type="html">The CSS source for this stylesheet</Abstract>
				</Parameter><Parameter>
					<Name>origin</Name>
					<Abstract type="html">The specificity origin for this stylesheet</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/styleSheetFromSource:withOrigin:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/styleSheetFromFilePath:withOrigin:</TokenIdentifier>
			<Abstract type="html">Allocate and initialize a new styleheet for the specified path and stylesheet origin</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (id)styleSheetFromFilePath:(NSString *)filePath withOrigin:(PXStylesheetOrigin)origin</Declaration>
			<Parameters>
				<Parameter>
					<Name>filePath</Name>
					<Abstract type="html">The string path to the stylesheet file</Abstract>
				</Parameter><Parameter>
					<Name>origin</Name>
					<Abstract type="html">The specificity origin for this stylesheet</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/styleSheetFromFilePath:withOrigin:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/currentApplicationStylesheet</TokenIdentifier>
			<Abstract type="html">A class-level getter returning the current application-level stylesheet. This value may be nil</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (PXStylesheet *)currentApplicationStylesheet</Declaration>
			
			
			<Anchor>//api/name/currentApplicationStylesheet</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/currentUserStylesheet</TokenIdentifier>
			<Abstract type="html">A class-level getter returning the current user-level stylesheet. This value may be nil</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (PXStylesheet *)currentUserStylesheet</Declaration>
			
			
			<Anchor>//api/name/currentUserStylesheet</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/currentViewStylesheet</TokenIdentifier>
			<Abstract type="html">A class-level getter returning the current view-level stylesheet. This value may be nil</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (PXStylesheet *)currentViewStylesheet</Declaration>
			
			
			<Anchor>//api/name/currentViewStylesheet</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/applyStylesheets</TokenIdentifier>
			<Abstract type="html">Calls updateStylesForAllViews. Please call updateStylesForAllViews directly.
@deprecated</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)applyStylesheets</Declaration>
			
			
			<Anchor>//api/name/applyStylesheets</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/updateStylesForAllViews</TokenIdentifier>
			<Abstract type="html">Update styles for all windows and all if their subviews.</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)updateStylesForAllViews</Declaration>
			
			
			<Anchor>//api/name/updateStylesForAllViews</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/updateStyles:</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable and all of its descendant styleables</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)updateStyles:(id&lt;PXStyleable&gt;)styleable</Declaration>
			<Parameters>
				<Parameter>
					<Name>styleable</Name>
					<Abstract type="html">The styleable to update</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateStyles:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/updateStylesNonRecursively:</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable only</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)updateStylesNonRecursively:(id&lt;PXStyleable&gt;)styleable</Declaration>
			<Parameters>
				<Parameter>
					<Name>styleable</Name>
					<Abstract type="html">The styleable to update</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateStylesNonRecursively:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/updateStylesAsync:</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable and all of its descendant styleables asynchronously</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)updateStylesAsync:(id&lt;PXStyleable&gt;)styleable</Declaration>
			<Parameters>
				<Parameter>
					<Name>styleable</Name>
					<Abstract type="html">The styleable to update</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateStylesAsync:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/updateStylesNonRecursivelyAsync:</TokenIdentifier>
			<Abstract type="html">Update styles for this styleable only asynchronously</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)updateStylesNonRecursivelyAsync:(id&lt;PXStyleable&gt;)styleable</Declaration>
			<Parameters>
				<Parameter>
					<Name>styleable</Name>
					<Abstract type="html">The styleable to update</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/updateStylesNonRecursivelyAsync:</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/clearImageCache</TokenIdentifier>
			<Abstract type="html">Remove all content from Pixate&apos;s image cache, if one is being used</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)clearImageCache</Declaration>
			
			
			<Anchor>//api/name/clearImageCache</Anchor>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/clm/PixateFreestyle/clearStyleCache</TokenIdentifier>
			<Abstract type="html">Remove all content from Pixate&apos;s style cache, if one is being used</Abstract>
			<DeclaredIn>PixateFreestyle.h</DeclaredIn>			
			
			<Declaration>+ (void)clearStyleCache</Declaration>
			
			
			<Anchor>//api/name/clearStyleCache</Anchor>
		</Token>
		
	</File>
</Tokens>